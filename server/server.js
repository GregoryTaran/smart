// --- –ò–º–ø–æ—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ---
import express from 'express';  // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTTP-–∑–∞–ø—Ä–æ—Å–∞–º–∏
import path from 'path';  // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É—Ç—è–º–∏
import fs from 'fs';  // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import http from 'http';  // –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞
import { WebSocketServer } from 'ws';  // –î–ª—è WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ ---
const PORT = process.env.PORT || 10000;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
const app = express();  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
const httpServer = http.createServer(app);  // –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
const wss = new WebSocketServer({ server: httpServer });  // –°–æ–∑–¥–∞–µ–º WebSocket —Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ HTTP

// --- –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã ---
app.use("/smart", express.static(path.join(process.cwd(), "smart")));  // –û—Ç–¥–∞–µ–º —Å—Ç–∞—Ç–∏–∫—É –∏–∑ –ø–∞–ø–∫–∏ "smart"

// --- –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∫–æ—Ä–Ω—è —Å–∞–π—Ç–∞ (/) ---
app.get("/", (req, res) => {
  console.log("Request for root (/) received");  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
  if (fs.existsSync(indexPath)) {
    res.sendFile(indexPath);  // –û—Ç–¥–∞–µ–º —Ñ–∞–π–ª index.html –∏–∑ –∫–æ—Ä–Ω—è
  } else {
    res.status(404).send("404 - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
  }
});

// --- –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è /smart ---
app.get("/smart", (req, res) => {
  console.log("Request for /smart received");  // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
  if (fs.existsSync(smartIndexPath)) {
    res.sendFile(smartIndexPath);  // –û—Ç–¥–∞–µ–º —Ñ–∞–π–ª index.html –∏–∑ –ø–∞–ø–∫–∏ "smart"
  } else {
    res.status(404).send("404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ /smart –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
  }
});

// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
httpServer.listen(PORT, () => {
  console.log(`üåê WebSocket –∏ HTTP —Å–µ—Ä–≤–µ—Ä—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π ---
wss.on("connection", (ws) => {
  ws.isAlive = true;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∂–∏–≤–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  ws.id = Date.now().toString(36) + Math.random().toString(36).slice(2, 6);  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–∏–Ω–≥/–ø–æ–Ω–≥) ---
  ws.on("message", async (msg) => {
    try {
      const data = JSON.parse(msg);
      // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–π, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–∏–Ω–≥/–ø–æ–Ω–≥
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ", error);
    }
  });

  // --- –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ---
  ws.on("close", () => {
    console.log(`‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ: ${ws.id}`);
  });
});

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç–∏ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (–ø–∏–Ω–≥/–ø–æ–Ω–≥) ---
setInterval(() => {
  wss.clients.forEach((ws) => {
    if (!ws.isAlive) {
      return ws.terminate();  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    }
    ws.isAlive = false;  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –∂–∏–≤–æ—Å—Ç–∏
    ws.ping();  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏–Ω–≥
  });
}, 15000);  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
