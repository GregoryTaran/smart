import express from "express";
import path from "path";
import { WebSocketServer } from "ws";

import registerTranslator from "./smart/translator/server-translator.js";
import registerContext from "./smart/context/server-context.js";

const PORT = process.env.PORT || 3000;
const ROOT = path.resolve(".");

const app = express();
app.use(express.json());

// === –†–∞–∑–¥–∞—á–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ ===
app.use("/smart", express.static(path.join(ROOT, "smart")));
app.use(express.static(ROOT));

// === –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ HTTP-—Å–µ—Ä–≤–µ—Ä–∞ ===
const server = app.listen(PORT, () => {
  console.log(`üöÄ Smart Vision Server started on port ${PORT}`);
  console.log(`üìÇ Root: ${ROOT}`);
});

// === –†–∞–∑–¥–µ–ª—å–Ω—ã–µ WebSocket-—Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è –º–æ–¥—É–ª–µ–π ===
// –ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π endpoint
const wssTranslator = new WebSocketServer({ server, path: "/translator/ws" });
const wssContext = new WebSocketServer({ server, path: "/context/ws" });

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –º–æ–¥—É–ª–µ–π ===
registerTranslator(app, wssTranslator);
registerContext(app, wssContext);

// === –†–µ–∑–µ—Ä–≤ –¥–ª—è –±—É–¥—É—â–∏—Ö –º–æ–¥—É–ª–µ–π ===
// import registerVision from "./smart/vision/server-vision.js";
// const wssVision = new WebSocketServer({ server, path: "/vision/ws" });
// registerVision(app, wssVision);

console.log("üß© Modules loaded: Translator, Context");
